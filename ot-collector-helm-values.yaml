
config:
  processors:
    k8sattributes:
      passthrough: false
      auth_type: "kubeConfig"
      extract:
        metadata:
          # extract the following well-known metadata fields
          - podName
          - podUID
          - deployment
          - cluster
          - namespace
          - node
          - startTime
  exporters:
    logging: {}
    otlp/data-prepper:
      endpoint: data-prepper-headless.tracing.svc:21890
      tls:
        insecure: true

  service:
    extensions: [health_check]
    pipelines:
      traces:
        receivers: [otlp]
        processors: [memory_limiter, batch, k8sattributes]
        exporters: [logging, otlp/data-prepper]

# disable ports that are not required
ports:
  jaeger-binary:
    enabled: false
  jaeger-compact:
    enabled: false
  jaeger-grpc:
    enabled: false
  jaeger-http:
    enabled: false
  zipkin:
    enabled: false

k8sProcessor:
  rbac:
    name: "microservices-tagger"
    create: true

serviceAccount:
  create: true

resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 200m
    memory: 400Mi

clusterRole:
  # Specifies whether a clusterRole should be created
  create: true
  # Annotations to add to the clusterRole
  annotations: {}
  # The name of the clusterRole to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "ot-collector-clusterrole"
  # A set of rules as documented here : https://kubernetes.io/docs/reference/access-authn-authz/rbac/
  rules:
  - apiGroups:
    - ''
    resources:
    - 'pods'
    - 'nodes'
    verbs:
    - 'get'
    - 'list'
    - 'watch'

  clusterRoleBinding:
    # Annotations to add to the clusterRoleBinding
    annotations: {}
    # The name of the clusterRoleBinding to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "ot-collector-clusterrolebinding"

standaloneCollector:
  enabled: true

agentCollector:
  enabled: false